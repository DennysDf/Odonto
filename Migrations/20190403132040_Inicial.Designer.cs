// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Odonto.Models.BDODONTO.Context;

namespace Odonto.Migrations
{
    [DbContext(typeof(DBOdontoContext))]
    [Migration("20190403132040_Inicial")]
    partial class Inicial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Anamnese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descricao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.ToTable("Anamneses");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.ClienteAnamnese", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AnamneseId");

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Descricao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.HasKey("Id");

                    b.HasIndex("AnamneseId");

                    b.HasIndex("ClienteId");

                    b.ToTable("ClienteAnamneses");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cidade");

                    b.Property<string>("Convenio");

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DataNasc");

                    b.Property<string>("DentistaOrigem");

                    b.Property<string>("Email");

                    b.Property<string>("Endereco");

                    b.Property<string>("EstadoCivil");

                    b.Property<string>("Extensao");

                    b.Property<int>("IdResp");

                    b.Property<string>("InicioTrate");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.Property<string>("NumConvenio");

                    b.Property<string>("Obs");

                    b.Property<string>("Profissao");

                    b.Property<string>("Telefone");

                    b.HasKey("Id");

                    b.HasIndex("IdResp");

                    b.ToTable("Clientes");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Consultorio", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Endereco");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Nome");

                    b.HasKey("Id");

                    b.ToTable("Consultorios");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Exames", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DataRealizao");

                    b.Property<string>("Descricao");

                    b.Property<string>("Extensao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Exames");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Medicamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("id")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Apresentacao")
                        .HasColumnName("apresentacao");

                    b.Property<string>("Laboratorio")
                        .HasColumnName("laboratorio");

                    b.Property<string>("Nome")
                        .HasColumnName("nome");

                    b.Property<string>("PrincipioAtivo")
                        .HasColumnName("principio_ativo");

                    b.HasKey("Id");

                    b.ToTable("Medicamentos");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Procedimentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<DateTime>("DataCad")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("DataRealizacao");

                    b.Property<string>("Descricao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<string>("Titulo");

                    b.HasKey("Id");

                    b.HasIndex("ClienteId");

                    b.ToTable("Procedimentos");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.ReceituarioMedicamentos", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AdmVia");

                    b.Property<string>("Concentracao");

                    b.Property<string>("Dose");

                    b.Property<int>("Duracao");

                    b.Property<int>("DuracaoEm");

                    b.Property<int>("Forma");

                    b.Property<int>("Medicamento");

                    b.Property<int?>("MedicamentoId");

                    b.Property<int>("Quantidade");

                    b.Property<int>("RecedituarioId");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("MedicamentoId");

                    b.HasIndex("RecedituarioId");

                    b.ToTable("Receituario");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Receituarios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ClienteId");

                    b.Property<int?>("ClientesId");

                    b.Property<DateTime>("DataCad");

                    b.HasKey("Id");

                    b.HasIndex("ClientesId");

                    b.ToTable("Receituarios");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.ResetSenha", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("DataHora")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValueSql("(getdate())");

                    b.Property<string>("Email");

                    b.Property<int>("Numero");

                    b.HasKey("Id");

                    b.ToTable("ResetSenha");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Usuario", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ConsultorioId");

                    b.Property<string>("Email");

                    b.Property<string>("Extensao");

                    b.Property<bool>("IsAtivo")
                        .ValueGeneratedOnAdd()
                        .HasDefaultValue(true);

                    b.Property<DateTime?>("LastAcesso");

                    b.Property<string>("Login");

                    b.Property<string>("Nome");

                    b.Property<string>("Senha");

                    b.Property<int>("Tipo");

                    b.HasKey("Id");

                    b.HasIndex("ConsultorioId");

                    b.ToTable("Usuarios");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.ClienteAnamnese", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Anamnese", "Anamnese")
                        .WithMany("ClienteAnamneses")
                        .HasForeignKey("AnamneseId");

                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Clientes", "Cliente")
                        .WithMany("ClienteAnamneses")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Clientes", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Usuario", "Resp")
                        .WithMany("Clientes")
                        .HasForeignKey("IdResp");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Exames", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Clientes", "Cliente")
                        .WithMany("Exames")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Procedimentos", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Clientes", "Cliente")
                        .WithMany("Procedimentos")
                        .HasForeignKey("ClienteId");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.ReceituarioMedicamentos", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Medicamentos", "Medicamentos")
                        .WithMany("Receituarios")
                        .HasForeignKey("MedicamentoId");

                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Receituarios", "Receituarios")
                        .WithMany("ReceituarioMedicamentos")
                        .HasForeignKey("RecedituarioId");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Receituarios", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Clientes", "Clientes")
                        .WithMany("Receituarios")
                        .HasForeignKey("ClientesId");
                });

            modelBuilder.Entity("Odonto.Models.BDODONTO.Entidades.Usuario", b =>
                {
                    b.HasOne("Odonto.Models.BDODONTO.Entidades.Consultorio", "Consultorio")
                        .WithMany("Usuarios")
                        .HasForeignKey("ConsultorioId");
                });
#pragma warning restore 612, 618
        }
    }
}
